/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_PROTO_ROTATIONPROFILE_PB_H_INCLUDED
#define PB_PROTO_ROTATIONPROFILE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _RotationProfile {
    uint64_t isr_timestamp;
    uint64_t rotation_begin_timestamp;
    uint64_t rotation_end_timestamp;
    uint32_t isr_trigger_number;
} RotationProfile;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define RotationProfile_init_default             {0, 0, 0, 0}
#define RotationProfile_init_zero                {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define RotationProfile_isr_timestamp_tag        1
#define RotationProfile_rotation_begin_timestamp_tag 2
#define RotationProfile_rotation_end_timestamp_tag 3
#define RotationProfile_isr_trigger_number_tag   4

/* Struct field encoding specification for nanopb */
#define RotationProfile_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   isr_timestamp,     1) \
X(a, STATIC,   SINGULAR, UINT64,   rotation_begin_timestamp,   2) \
X(a, STATIC,   SINGULAR, UINT64,   rotation_end_timestamp,   3) \
X(a, STATIC,   SINGULAR, UINT32,   isr_trigger_number,   4)
#define RotationProfile_CALLBACK NULL
#define RotationProfile_DEFAULT NULL

extern const pb_msgdesc_t RotationProfile_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define RotationProfile_fields &RotationProfile_msg

/* Maximum encoded size of messages (where known) */
#define PROTO_ROTATIONPROFILE_PB_H_MAX_SIZE      RotationProfile_size
#define RotationProfile_size                     39

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
